# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-17 13:26
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupExtension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('prefix', models.CharField(max_length=100, unique=True)),
                ('promiscuous', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('approvers', models.BooleanField(default=False)),
                ('version_states', models.PositiveSmallIntegerField(default=0)),
                ('version', models.PositiveIntegerField(default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Logger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='date published')),
                ('log_text', models.CharField(max_length=5000)),
                ('severity', models.PositiveSmallIntegerField(default=6)),
            ],
        ),
        migrations.CreateModel(
            name='OwnerControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='VersionAndOwnerControl',
            fields=[
                ('ownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.OwnerControl')),
                ('version', models.PositiveIntegerField(default=0)),
            ],
            bases=('firewall_rules.ownercontrol',),
        ),
        migrations.AddField(
            model_name='ownercontrol',
            name='owner',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='firewall_rules.GroupExtension'),
        ),
        migrations.CreateModel(
            name='ApprovalAndVersionAndOwnerControl',
            fields=[
                ('versionandownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.VersionAndOwnerControl')),
                ('approved', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('rejected_reason', models.CharField(blank=True, default='', max_length=1000)),
            ],
            bases=('firewall_rules.versionandownercontrol',),
        ),
        migrations.CreateModel(
            name='AtomicNetworkObject',
            fields=[
                ('versionandownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.VersionAndOwnerControl')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('type', models.CharField(choices=[('4S', 'IPv4 Subnet'), ('4H', 'IPv4 Host'), ('4R', 'IPv4-to-IPv4 Range')], max_length=2)),
                ('octet1', models.PositiveSmallIntegerField()),
                ('octet2', models.PositiveSmallIntegerField()),
                ('octet3', models.PositiveSmallIntegerField()),
                ('octet4', models.PositiveSmallIntegerField()),
                ('mask', models.PositiveSmallIntegerField(blank=True, default=32, null=True)),
                ('range_octet1', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('range_octet2', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('range_octet3', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('range_octet4', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
            ],
            bases=('firewall_rules.versionandownercontrol',),
        ),
        migrations.CreateModel(
            name='AtomicNetworkObjectToLocationBind',
            fields=[
                ('versionandownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.VersionAndOwnerControl')),
            ],
            bases=('firewall_rules.versionandownercontrol',),
        ),
        migrations.CreateModel(
            name='LocationReference',
            fields=[
                ('versionandownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.VersionAndOwnerControl')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('prefix', models.CharField(max_length=100)),
            ],
            bases=('firewall_rules.versionandownercontrol',),
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('versionandownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.VersionAndOwnerControl')),
                ('protocol', models.CharField(choices=[('U', 'UDP'), ('T', 'TCP'), ('I', 'ICMP'), ('*', 'ANY')], max_length=1)),
                ('range', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('number', models.IntegerField(default=-1)),
                ('number2', models.IntegerField(blank=True, default=-1)),
            ],
            bases=('firewall_rules.versionandownercontrol',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('versionandownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.VersionAndOwnerControl')),
                ('name', models.CharField(default='', max_length=200)),
                ('ports', models.ManyToManyField(to='firewall_rules.Port')),
            ],
            bases=('firewall_rules.versionandownercontrol',),
        ),
        migrations.CreateModel(
            name='StaticNetworkObjectGroup',
            fields=[
                ('versionandownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.VersionAndOwnerControl')),
                ('name', models.CharField(max_length=200)),
                ('network_objects', models.ManyToManyField(to='firewall_rules.AtomicNetworkObject')),
            ],
            bases=('firewall_rules.versionandownercontrol',),
        ),
        migrations.CreateModel(
            name='SystemMap',
            fields=[
                ('versionandownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.VersionAndOwnerControl')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('network_object_to_location_list', models.ManyToManyField(to='firewall_rules.AtomicNetworkObjectToLocationBind')),
            ],
            bases=('firewall_rules.versionandownercontrol',),
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('approvalandversionandownercontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='firewall_rules.ApprovalAndVersionAndOwnerControl')),
                ('action', models.CharField(choices=[('P', 'PERMIT'), ('D', 'DENY')], default='P', max_length=1)),
                ('dynamic_source_type', models.CharField(choices=[('S', 'SEMI-STATIC'), ('D', 'DYNAMIC'), ('A', 'ALL FORCED')], default='D', max_length=1)),
                ('dynamic_destination_type', models.CharField(choices=[('S', 'SEMI-STATIC'), ('D', 'DYNAMIC'), ('A', 'ALL FORCED')], default='D', max_length=1)),
                ('comment', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('destination_port_services', models.ManyToManyField(blank=True, related_name='destination_port_services', to='firewall_rules.Service')),
                ('dynamic_destination', models.ManyToManyField(blank=True, related_name='dynamic_destination_network_objects', to='firewall_rules.SystemMap')),
                ('dynamic_destination_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dynamic_destination_location', to='firewall_rules.LocationReference')),
                ('dynamic_source', models.ManyToManyField(blank=True, related_name='dynamic_source_network_objects', to='firewall_rules.SystemMap')),
                ('dynamic_source_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dynamic_source_location', to='firewall_rules.LocationReference')),
                ('source_port_services', models.ManyToManyField(blank=True, related_name='source_port_services', to='firewall_rules.Service')),
                ('static_destination', models.ManyToManyField(blank=True, related_name='static_destination_network_objects', to='firewall_rules.StaticNetworkObjectGroup')),
                ('static_source', models.ManyToManyField(blank=True, related_name='static_source_network_objects', to='firewall_rules.StaticNetworkObjectGroup')),
            ],
            bases=('firewall_rules.approvalandversionandownercontrol',),
        ),
        migrations.AddField(
            model_name='atomicnetworkobjecttolocationbind',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firewall_rules.LocationReference'),
        ),
        migrations.AddField(
            model_name='atomicnetworkobjecttolocationbind',
            name='network_objects',
            field=models.ManyToManyField(to='firewall_rules.AtomicNetworkObject'),
        ),
        migrations.AddField(
            model_name='approvalandversionandownercontrol',
            name='approved_by',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='approvalandversionandownercontrol',
            name='edited_by',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_by', to=settings.AUTH_USER_MODEL),
        ),
    ]
